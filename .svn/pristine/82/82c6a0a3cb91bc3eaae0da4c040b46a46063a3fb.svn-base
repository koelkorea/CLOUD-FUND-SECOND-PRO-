package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Logger;

import cmn.ConnectionMaker;
import cmn.DTO;
import cmn.JDBCUtil;
import cmn.WorkStandard;
import vo.ProjectVO;
import vo.SearchVO;

public class ProjectDao implements WorkStandard {
	final Logger LOG = Logger.getLogger(ProjectDao.class);
	
	public ProjectDao() {
		
	}

	@Override
	// 프로젝트 등록
	// 프로젝트 등록 성공 : flag = 1, 실패 : flag = 0
	public int doInsert(DTO param) {
		// 1. JDBC 드라이버 로딩
		// 2. 데이터베이스 커넥션
		// 3. 쿼리 실행 : DB(StringBuffer)
		// 4. 쿼리 실행 : JAVA(PreparedStatement)
		// 5. 쿼리 실행 결과 : flag(성공 = 1, 실패 = 0)
		// 6. PreparedStatement 자원 반납
		// 7. Connection 자원 반납
		int flag = 0;
		LOG.debug("0. param : " + param);
		
		ProjectVO inVO = (ProjectVO) param;
		
		Connection connection = null;
		PreparedStatement pstmt = null;
		
		// 1. JDBC 드라이버 로딩 : getnConnection()
		// 2. 데이터베이스 커넥션
		try {
			connection = ConnectionMaker.getConnection();
			LOG.debug("2. 데이터베이스 커넥션 : " + connection);
			
			// 3. 쿼리 실행 : DB(StringBuffer)
			StringBuffer sb = new StringBuffer(1000);
			
			sb.append(" INSERT INTO project 	\n");
			sb.append(" (                   	\n");
			sb.append(" 	p_seq,              \n");
			sb.append(" 	p_m_id,             \n");
			sb.append(" 	p_title,            \n");
			sb.append(" 	p_thumb,            \n");
			sb.append(" 	p_name,             \n");
			sb.append(" 	p_contents,         \n");
			sb.append(" 	p_cate,             \n");
			sb.append(" 	p_closedate,        \n");
			sb.append(" 	p_minprice,         \n");
			sb.append(" 	p_account,          \n");
			sb.append(" 	p_goalfund,         \n");
			sb.append(" 	mod_id)             \n");
			sb.append(" VALUES              	\n");
			sb.append(" (                   	\n");
			sb.append(" 	?,             		\n");
			sb.append(" 	?,            		\n");
			sb.append(" 	?,           		\n");
			sb.append(" 	?,           		\n");
			sb.append(" 	?,            		\n");
			sb.append(" 	?,        			\n");
			sb.append(" 	?,            		\n");
			sb.append(" 	?,      			\n");
			sb.append(" 	?,        			\n");
			sb.append(" 	?,         			\n");
			sb.append(" 	?,      	  		\n");
			sb.append(" 	? 		            \n");
			sb.append(" )                   	\n");
			LOG.debug("3. 쿼리 실행(DB) StringBuffer : \n" + sb.toString());
			
			// PreparedStatement : Binding SQL
			pstmt = connection.prepareStatement(sb.toString());
			// Parameter 셋팅
			pstmt.setString(1, inVO.getP_seq());
			pstmt.setString(2, inVO.getP_m_id());
			pstmt.setString(3, inVO.getP_title());
			pstmt.setString(4, inVO.getP_thumb());
			pstmt.setString(5, inVO.getP_name());
			pstmt.setString(6, inVO.getP_contents());
			pstmt.setString(7, inVO.getP_cate());
			pstmt.setString(8, inVO.getP_closedate());
			pstmt.setInt(9, inVO.getP_minprice());
			pstmt.setString(10, inVO.getP_account());
			pstmt.setInt(11, inVO.getP_goalfund());
			pstmt.setString(12, inVO.getMod_id());
			// 4. 쿼리 실행 : JAVA(PreparedStatement)
			LOG.debug("4. 쿼리 실행(JAVA) PreparedStatement : " + pstmt);
			
			// 5. 쿼리 실행 결과 : flag
			flag = pstmt.executeUpdate();
			LOG.debug("5. 쿼리 실행 결과 flag : " + flag);
			
		} catch (SQLException e) {
			LOG.debug("SQLException : " + e.getMessage());
			e.printStackTrace();
		} finally {
			// 6. PreparedStatement 자원 반납
			JDBCUtil.close(pstmt);
			
			// 7. Connection 자원 반납
			JDBCUtil.close(connection);
		}
		
		return flag;
	} // --- doInsert

	@Override
	// 프로젝트 삭제
	// 프로젝트 삭제 성공 : flag = 1, 실패 : flag = 0
	public int doDelete(DTO param) {
		// 1. JDBC 드라이버 로딩
		// 2. 데이터베이스 커넥션
		// 3. 쿼리 실행 : DB(StringBuffer)
		// 4. 쿼리 실행 : JAVA(PreparedStatement)
		// 5. 쿼리 실행 결과 : flag(성공 = 1, 실패 = 0)
		// 6. PreparedStatement 자원 반납
		// 7. Connection 자원 반납
		int flag = 0;
		LOG.debug("0. param : " + param);
		ProjectVO inVO = (ProjectVO) param;
		
		Connection connection = null;
		PreparedStatement pstmt = null;
		
		// 1. JDBC 드라이버 로딩 : getConnection()
		// 2. 데이터베이스 커넥션
		try {
			connection = ConnectionMaker.getConnection();
			// Transaction 사용자 제어
			connection.setAutoCommit(false);
			LOG.debug("2. 데이터베이스 커넥션 : " + connection);
			
			// 3. 쿼리 실행 : DB(StringBuffer)
			StringBuffer sb = new StringBuffer(50);
			sb.append("DELETE FROM project \n");
			sb.append("WHERE p_seq = ?;   \n");
			LOG.debug("3. 쿼리 실행(DB) StringBuffer : " + sb.toString());
			
			// PreparedStatement : Binding SQL
			pstmt = connection.prepareStatement(sb.toString());
			
			// Parameter 셋팅
			pstmt.setString(1,  inVO.getP_seq());
			// 4. 쿼리 실행 : JAVA(PreparedStatement)
			LOG.debug("4. 쿼리 실행(JAVA) PreparedStatement : " + pstmt);
			
			// 5. 쿼리 실행 결과 : flag
			flag = pstmt.executeUpdate();
			LOG.debug("쿼리 실행 결과 flag : " + flag);
			
			connection.commit();
		} catch (SQLException e) {
			try {
				connection.rollback();
			} catch (SQLException e1) {
				LOG.debug("SQLException : " + e.getMessage());
				e1.printStackTrace();
			}
			LOG.debug("SQLException : " + e.getMessage());
			e.printStackTrace();
		} finally {
			// 6. PreparedStatement 자원 반납
			JDBCUtil.close(pstmt);
			
			// 7. Connection 자원 반납
			JDBCUtil.close(connection);
		}
		
		return flag;
	} // --- doDelete

	@Override
	// 프로젝트 수정
	// 성공 : flag = 1, 실패 : flag = 0
	public int doUpdate(DTO param) {
		// 1. JDBC 드라이버 로딩
		// 2. 데이터베이스 커넥션
		// 3. 쿼리 실행 : DB(StringBuffer)
		// 4. 쿼리 실행 : JAVA(PreparedStatement)
		// 5. 쿼리 실행 결과 : flag(성공 = 1, 실패 = 0)
		// 6. PreparedStatement 자원 반납
		// 7. Connection 자원 반납
		int flag = 0;
		ProjectVO inVO = (ProjectVO) param;
		LOG.debug("0 param : " + param);
		
		Connection connection = null;
		PreparedStatement pstmt = null;
		
		// 1. JDBC 드라이버 로딩 : getConnection()
		// 2. 데이터베이스 커넥션
		try {
			connection = ConnectionMaker.getConnection();
			LOG.debug("2. 데이터베이스 커넥션 : " + connection);
			
			// 3. 쿼리 실행 : DB(StringBuffer)
			StringBuffer sb = new StringBuffer(1000);
			sb.append("UPDATE project       	\n");
			sb.append("SET p_title = ?,     	\n");
			sb.append("    p_thumb = ?,     	\n");
			sb.append("	   p_name = ?,          \n");
			sb.append("	   p_contents = ?,      \n");
			sb.append("	   p_cate = ?,          \n");
			sb.append("	   p_closedate ?,       \n");
			sb.append("    p_minprice = ?,		\n");
			sb.append("	   p_account = ?,       \n");
			sb.append("	   p_goalfund = ?,      \n");
			sb.append("	   p_status = ?,        \n");
			sb.append("	   mod_id = ?,          \n");
			sb.append("	   mod_dt = sysdate     \n");
			sb.append("WHERE p_seq = ?      	\n");
			LOG.debug("3. 쿼리 실행(DB) StringBuffer : " + sb.toString());
			
			// PreparedStatement : Binding SQL
			pstmt = connection.prepareStatement(sb.toString());			
			// Parameter 셋팅
			pstmt.setString(1, inVO.getP_title());
			pstmt.setString(2, inVO.getP_thumb());
			pstmt.setString(3, inVO.getP_name());
			pstmt.setString(4, inVO.getP_contents());
			pstmt.setString(5, inVO.getP_cate());
			pstmt.setString(6, inVO.getP_closedate());
			pstmt.setInt(7, inVO.getP_minprice());
			pstmt.setString(8, inVO.getP_account());
			pstmt.setInt(9, inVO.getP_goalfund());
			pstmt.setString(10, inVO.getP_status());
			pstmt.setString(11, inVO.getMod_id());
			pstmt.setString(12, inVO.getP_seq());
			
			// 4. 쿼리 실행 : JAVA(PreparedStatement)
			LOG.debug("4. 쿼리 실행(JAVA) PreparedStatement : " + pstmt);
			
			// 5. 쿼리 실행 결과
			flag = pstmt.executeUpdate();
			LOG.debug("5. 쿼리 실행 결과 falg : " + flag);
		} catch (SQLException e) {
			LOG.debug("SQLException : " + e.getMessage());
			e.printStackTrace();
		} finally {
			// 6. PreparedStatement 자원 반납
			JDBCUtil.close(pstmt);
			
			// 7. Connection 자원 반납
			JDBCUtil.close(connection);
		}

		return flag;
	} // --- doUpdate

	@Override
	// 프로젝트 단건 조회
	public ProjectVO doSelectOne(DTO param) {
		// 1. JDBC 드라이버 로딩
		// 2. 데이터베이스 커넥션
		// 3. 쿼리 실행 : DB(StringBuffer)
		// 4. 쿼리 실행 : JAVA(PreparedStatement)
		// 5. 쿼리 실행 결과 : rs
		// 6. ResultSet
		// 7. PreparedStatement 자원 반납
		// 8. Connection 자원 반납
		
		ProjectVO project = null;
		ProjectVO inVO = (ProjectVO) param;
		LOG.debug("0. param : " + param);
		
		Connection connection = null;
		PreparedStatement pstmt = null;
		
		// Return Value 처리
		ResultSet rs = null;
		
		// 1. JDBC 드라이버 로딩 : getConnection()
		// 2. 데이터베이스 커넥션
		try {
			connection = ConnectionMaker.getConnection();
			LOG.debug("2. 데이터베이스 커넥션 : " + connection);
			
			// 3. 쿼리 실행 : DB(StringBuffer)
			StringBuffer sb = new StringBuffer(500);
			sb.append("SELECT p_seq,                                                 	 \n");
			sb.append("	   	  p_m_id,                                                    \n");
			sb.append("	   	  p_title,                                                   \n");
			sb.append("	   	  p_thumb,                                                   \n");
			sb.append("	   	  p_name,                                                    \n");
			sb.append("	   	  p_contents,                                                \n");
			sb.append("	   	  p_cate,                                                    \n");
			sb.append("	   	  TO_CHAR(p_opendate, 'YYYY-MM-DD HH24:MI:SS') p_opendate,   \n");
			sb.append("	   	  TO_CHAR(p_closedate, 'YYYY-MM-DD HH24:MI:SS') p_closedate, \n");
			sb.append("	   	  p_minprice,                                                \n");
			sb.append("	   	  p_account,                                                 \n");
			sb.append("	   	  p_goalfund,                                                \n");
			sb.append("	   	  p_status,                                                  \n");
			sb.append("	   	  mod_id,                                                    \n");
			sb.append("	   	  TO_CHAR(mod_dt, 'YYYY-MM-DD HH24:MI:SS') mod_dt            \n");
			sb.append("FROM project                                                   	 \n");
			sb.append("WHERE p_seq = ?                                                	 \n");
			LOG.debug("3. 쿼리 실행(DB) StringBuffer : " + sb.toString());
			
			pstmt = connection.prepareStatement(sb.toString());
			pstmt.setString(1, inVO.getP_seq());
			
			// 4. 쿼리 실행 : JAVA(PreparedStatement)
			LOG.debug("쿼리 실행(JAVA) PreparedStatement : " + pstmt);

			// 5. 쿼리 실행 결과 처리
			rs = pstmt.executeQuery();
			LOG.debug("5. 쿼리 실행 ResultSet : " + rs);
			
			if (rs.next() == true) {
				// Return ProjectVO 객체 생성
				project = new ProjectVO();
				
				project.setP_seq(rs.getString("p_seq"));
				project.setP_m_id(rs.getString("p_m_id"));
				project.setP_title(rs.getString("p_title"));
				project.setP_thumb(rs.getString("p_thumb"));
				project.setP_name(rs.getString("p_name"));
				project.setP_contents(rs.getString("p_contents"));
				project.setP_cate(rs.getString("p_cate"));
				project.setP_opendate(rs.getString("p_opendate"));
				project.setP_closedate(rs.getString("p_closedate"));
				project.setP_minprice(rs.getInt("p_minprice"));
				project.setP_account(rs.getString("p_account"));
				project.setP_goalfund(rs.getInt("p_goalfund"));
				project.setP_status(rs.getString("p_status"));
				project.setMod_id(rs.getString("mod_id"));
				project.setMod_dt(rs.getString("mod_dt"));
			}
			
			LOG.debug("project : " + project);

		} catch (SQLException e) {
			LOG.debug("SQLException : " + e.getMessage());
			e.printStackTrace();
		} finally {
			// 6. ResultSet 자원 반납
			JDBCUtil.close(rs);
			
			// 7. PreparedStatement 자원 반납
			JDBCUtil.close(pstmt);
			
			// 8. Connection 자원 반납
			JDBCUtil.close(connection);
		}

		return project;
	} // --- doSelectOne

	@Override
	// 프로젝트 목록 조회
	public List<ProjectVO> doRetrieve(DTO param) {
		// 1. JDBC 드라이버 로딩
		// 2. 데이터베이스 커넥션
		// 3. 쿼리 실행 : DB(StringBuffer)
		// 4. 쿼리 실행 : JAVA(PreparedStatement)
		// 5. 쿼리 실행 결과 : flag(성공 = 1, 실패 = 0)
		// 6. ResultSet 자원 반납
		// 7. PreparedStatement 자원 반납
		// 8. Connection 자원 반납
		List<ProjectVO> list = new ArrayList<ProjectVO>();
		SearchVO inVO = (SearchVO) param;
		LOG.debug("0. param : " + param);
		
		Connection connection = null;
		PreparedStatement pstmt = null;
		// Result Value 처리
		ResultSet rs = null;
		
		// 1. JDBC 드라이버 로딩 : getConnection()
		// 2. 데이터베이스 커넥션
		try {
			connection = ConnectionMaker.getConnection();
			LOG.debug("2. 데이터베이스 커넥션 : " + connection);
			
			// 동적 검색 조건 처리
			StringBuffer sbWhere = new StringBuffer(500);
			
			// 전체("")
			
			// 3. 쿼리 실행 : DB(StringBuffer) 
			StringBuffer sb = new StringBuffer(2000);
		} catch (SQLException e) {
			LOG.debug("SQLException : " + e.getMessage());
			e.printStackTrace();
		} finally {
			// 6. ResultSet 자원 반납
			JDBCUtil.close(rs);
				
			// 7. PreparedStatement 자원 반납
			JDBCUtil.close(pstmt);
					
			// 8. Connection 자원 반납
			JDBCUtil.close(connection);
		}
		
		return list;
	} // --- doRetrieve

}
